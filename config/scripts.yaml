zigbee2mqtt_rename:
  alias: Zigbee2MQTT Rename
  sequence:
    service: mqtt.publish
    data_template:
      topic: zigbee2mqtt/bridge/request/device/rename
      payload_template: >-
        {
          "from": "{{ states.input_text.zigbee2mqtt_old_name.state | string }}",
          "to": "{{ states.input_text.zigbee2mqtt_new_name.state | string }}"
        }
zigbee2mqtt_remove:
  alias: Zigbee2MQTT Remove
  sequence:
    service: mqtt.publish
    data_template:
      topic: zigbee2mqtt/bridge/request/device/remove
      payload_template: "{{ states.input_text.zigbee2mqtt_remove.state | string }}"

# inspiração: https://github.com/CCOSTAN/Home-AssistantConfig/blob/master/config/script/speech_engine.yaml

######################################################################################################
###Script to send notifications to the ChromeCast Audios during normal hours and only when we are home! Call like this:
  # action:
    # service: script.speech_engine
    # data:
    #   call_no_announcement:
    #   call_dark_outside:
    #   call_window_check:
    #   call_garage_check:
    #   call_responsibilities
    #   call_light_check
    #   call_inside_weather
    #   call_outside_weather
# # @CCOSTAN
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig
######################################################################################################


speech_engine:
  sequence:
    - condition: or
      conditions:
        - condition: state
          entity_id: group.family
          state: 'home'
        - condition: state
          entity_id: input_boolean.guest_mode
          state: 'off'

    - service: script.speech_processing
      data_template:
        media_player: >-
            {% if media_player | length == 0 %}
              {% set media_player = [
                'media_player.echo_sala'
              ] %}
            {% endif %}

            {% if media_player is not string and media_player is sequence %}
              {% set media_player = media_player|join(', ') %}
            {% endif %}

            {{ media_player }}

        speech_message: !include ./templates/speech/briefing.yaml

######################################################################################################
###Script to actually send notifications to the ChromeCast Audios during normal hours and only when we are home! Call like this:
  # action:
    # service: script.speech_engine
    # speech_message:
# # @CCOSTAN
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig
######################################################################################################


speech_processing:
  sequence:
    - service: mqtt.publish
      data_template:
        topic: 'polly/lastmsg'
        payload: "{{ now().strftime('%-I') }}:{{ now().strftime('%M') }} {{ now().strftime('%p') }}. {{ speech_message | truncate(220)}}"
        retain: true
    # - service: notify.AURELIO
    #   data_template:
    #     message: "{{ now().strftime('%-I') }}:{{ now().strftime('%M') }} {{ now().strftime('%p') }}. {{ speech_message | truncate(220)}}"
    - condition: and
      conditions:
        - condition: or
          conditions:
            - condition: state
              entity_id: group.family
              state: 'home'

            - condition: state
              entity_id: input_boolean.guest_mode
              state: 'off'
        # - condition: or
        #   conditions:
        #     - condition: and
        #       conditions:
        #         - condition: time
        #           after: '08:00:00'
        #           before: '23:00:00'
        - condition: state
          entity_id: input_boolean.speech_notifications
          state: 'on'

    # - service: media_player.volume_set
    #   data_template:
    #    entity_id: >
    #      {{ media_player }}
    #    volume_level: >-
    #      {% if now().strftime('%H')|int < 12 and now().strftime('%H')|int > 6 %}
    #        0.3
    #      {% elif now().strftime('%H')|int > 12 and now().strftime('%H')|int < 20 %}
    #        0.5
    #      {% else %}
    #        0.3
    #      {% endif %}
    # - delay: 1
    - service: notify.alexa_media
      data_template:
        target: >
          {{ media_player }}
        data:
          type: announce
        message: >
          {{ speech_message }}
home_status:
  sequence:
    - service: script.speech_engine
      data_template:
        media_player: media_player.echo_dot_laboratorio
        custom_message: >
          Teste de script
        call_no_announcement: 1
instant_message:
  sequence:
  - service: notify.alexa_media
    data_template:
       target: "{{ states('input_select.message_target') }}"
       data:
         type: announce
       message: "{{ states('input_text.text1') }}"
